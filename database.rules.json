{
  "rules": {
    "courses": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$courseId": {
        ".read": true,
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || data.child('createdBy').val() === auth.uid)",
        ".validate": "newData.hasChildren(['title', 'description', 'accessType', 'createdBy', 'updatedAt'])",
        "content": {
          ".read": "data.parent().child('accessType').val() === 'free' || auth != null && (root.child('purchases').child(auth.uid).child(data.parent().key).exists() || root.child('users').child(auth.uid).child('subscription').child('status').val() === 'active')",
          ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || data.parent().child('createdBy').val() === auth.uid)"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        "role": {
          ".validate": "newData.val() === 'user' || newData.val() === 'admin'"
        },
        "subscription": {
          ".validate": "newData.hasChildren(['status', 'currentPeriodEnd'])"
        }
      }
    },
    "progress": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid"
      }
    },
    "purchases": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "auth != null && $uid === auth.uid",
        "$courseId": {
          ".validate": "newData.hasChildren(['purchasedAt', 'amount', 'status'])"
        }
      }
    },
    "backups": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'"
    }
  }
}