{
  "rules": {
    "courses": {
      ".read": true,
      "$courseId": {
        ".read": true,
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || data.child('createdBy').val() === auth.uid)",
        ".validate": "newData.hasChildren(['title', 'description', 'accessType', 'createdBy', 'updatedAt'])",
        "content": {
          ".read": "data.parent().child('accessType').val() === 'free' || auth != null && (root.child('purchases').child(auth.uid).child(data.parent().key).exists() || root.child('users').child(auth.uid).child('subscription').child('status').val() === 'active')",
          ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'admin' || data.parent().child('createdBy').val() === auth.uid)"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        "subscription": {
          ".read": "$uid === auth.uid",
          ".write": "auth != null && ($uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
          ".validate": "newData.hasChildren(['status', 'currentPeriodEnd', 'stripeSubscriptionId'])"
        }
      }
    },
    "purchases": {
      "$userId": {
        "$courseId": {
          ".read": "$userId === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
          ".write": "auth != null && ($userId === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
          ".validate": "newData.hasChildren(['purchasedAt', 'amount', 'paymentMethod', 'status'])"
        }
      }
    },
    "transactions": {
      "$transactionId": {
        ".read": "auth != null && (data.child('userId').val() === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['userId', 'courseId', 'amount', 'status', 'paymentMethod', 'createdAt'])"
      }
    }
  }
}